<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MilitiaDataParsing</name>
    </assembly>
    <members>
        <member name="T:MilitiaDataParsing.IParsable">
            <summary>
            Defines methods which are required to parse the object.
            </summary>
        </member>
        <member name="P:MilitiaDataParsing.IParsable.Header">
            <summary>
            Source data header for this object type. Will use type name if null.
            <para>Example: { get { return null; } }</para>
            <para>Example: { get { return "data_type_name"; } }</para>
            </summary>
        </member>
        <member name="M:MilitiaDataParsing.IParsable.Parsing(MilitiaDataParsing.Parser)">
            <summary>
            Called when importing or exporting and is used connect all fields or properties with their specified keys. Not intended to be called manually.
            </summary>
            <param name="parse">Parser containing methods for parsing values.</param>
        </member>
        <member name="T:MilitiaDataParsing.Task">
            <summary>
            Current task of a parser.
            </summary>
        </member>
        <member name="F:MilitiaDataParsing.Task.Sleeping">
            <summary>
            Indicates that the parser is currently not parsing any data.
            </summary>
        </member>
        <member name="F:MilitiaDataParsing.Task.Importing">
            <summary>
            Indicates that the parser is currently importing data.
            </summary>
        </member>
        <member name="F:MilitiaDataParsing.Task.Exporting">
            <summary>
            Indicates that the parser is currently exporting data.
            </summary>
        </member>
        <member name="T:MilitiaDataParsing.Parser">
            <summary>
            Represents a parser and its logic used to export and import data.
            </summary>
        </member>
        <member name="P:MilitiaDataParsing.Parser.Task">
            <summary>
            States the current task of the parser.
            </summary>
        </member>
        <member name="F:MilitiaDataParsing.Parser.stringContainer">
            <summary>
            Symbol to surround string values.
            </summary>
        </member>
        <member name="F:MilitiaDataParsing.Parser.containerHeaderSymbol">
            <summary>
            Indicates the start of a new container.
            </summary>
        </member>
        <member name="F:MilitiaDataParsing.Parser.containerFooterSymbol">
            <summary>
            Indicates the end of a container.
            </summary>
        </member>
        <member name="M:MilitiaDataParsing.Parser.TryParse``1(System.String)">
            <summary>
            Called when importing values. Override to extend parsing capabilities.
            </summary>
            <param name="data">The value loaded from source data.</param>
        </member>
        <member name="M:MilitiaDataParsing.Parser.List``1(System.String,System.Collections.Generic.List{``0})">
            <summary>
            Parses a list. To be called within Parsing method.
            <para>Usage: Property = List("key", Property);</para>
            </summary>
            <param name="key">Key in source data.</param>
            <param name="property">List to be processed.</param>
        </member>
        <member name="M:MilitiaDataParsing.Parser.Auto``1(System.String,``0@,System.Boolean)">
            <summary>
            Parse any value. To be called within Parsing method.
            <para>Usage: Auto("field_key", field);</para>
            </summary>
            <param name="key">Key in source data.</param>
            <param name="field">Field to be processed.</param>
            <param name="required">Will return warnings if required and value could not be processed.</param>
        </member>
        <member name="M:MilitiaDataParsing.Parser.Auto``1(System.String,``0,System.Boolean)">
            <summary>
            Parse any value. To be called within Parsing method.
            <para>Usage: Property = Auto("property_key", Property);</para>
            </summary>
            <param name="key">Key in source data.</param>
            <param name="property">Field to be processed.</param>
            <param name="required">Will return warnings if required and value could not be processed.</param>
        </member>
        <member name="M:MilitiaDataParsing.Parser.Value(System.String,System.Object@,System.Boolean)">
            <summary>
            Parses a value. To be called within Parsing method.
            <para>Usage: String("field_key", field);</para>
            </summary>
            <param name="key">Key in source data.</param>
            <param name="field">Field to be processed.</param>
            <param name="required">Will return warnings if required and value could not be processed.</param>
        </member>
        <member name="M:MilitiaDataParsing.Parser.Value(System.String,System.Object,System.Boolean)">
            <summary>
            Parses a value. To be called within Parsing method.
            <para>Usage: Property = String("property_key", Property);</para>
            </summary>
            <param name="key">Key in source data.</param>
            <param name="property">Property to be processed.</param>
            <param name="required">Will return warnings if required and value could not be processed.</param>
        </member>
        <member name="M:MilitiaDataParsing.Parser.Bool(System.String,System.Boolean@,System.Boolean)">
            <summary>
            Parses a bool value. To be called within Parsing method.
            <para>Usage: Bool("field_key", field);</para>
            </summary>
            <param name="key">Key in source data.</param>
            <param name="field">Field to be processed.</param>
            <param name="required">Will return warnings if required and value could not be processed.</param>
        </member>
        <member name="M:MilitiaDataParsing.Parser.Bool(System.String,System.Boolean,System.Boolean)">
            <summary>
            Parses a bool value. To be called within Parsing method.
            <para>Usage: Property = Bool("property_key", Property);</para>
            </summary>
            <param name="key">Key in source data.</param>
            <param name="property">Property to be processed.</param>
            <param name="required">Will return warnings if required and value could not be processed.</param>
        </member>
        <member name="M:MilitiaDataParsing.Parser.Enum``1(System.String,``0@,System.Boolean)">
            <summary>
            Parses a enum value. To be called within Parsing method.
            <para>Usage: Enum("field_key", field);</para>
            </summary>
            <param name="key">Key in source data.</param>
            <param name="field">Field to be processed.</param>
            <param name="required">Will return warnings if required and value could not be processed.</param>
        </member>
        <member name="M:MilitiaDataParsing.Parser.Enum``1(System.String,``0,System.Boolean)">
            <summary>
            Parses a enum value. To be called within Parsing method.
            <para>Usage: Property = Enum("property_key", Property);</para>
            </summary>
            <param name="key">Key in source data.</param>
            <param name="property">Property to be processed.</param>
            <param name="required">Will return warnings if required and value could not be processed.</param>
        </member>
        <member name="M:MilitiaDataParsing.Parser.Float(System.String,System.Single@,System.Boolean)">
            <summary>
            Parses a float value. To be called within Parsing method.
            <para>Usage: Float("field_key", field);</para>
            </summary>
            <param name="key">Key in source data.</param>
            <param name="field">Field to be processed.</param>
            <param name="required">Will return warnings if required and value could not be processed.</param>
        </member>
        <member name="M:MilitiaDataParsing.Parser.Float(System.String,System.Single,System.Boolean)">
            <summary>
            Parses a float value. To be called within Parsing method.
            <para>Usage: Property = Float("property_key", Property);</para>
            </summary>
            <param name="key">Key in source data.</param>
            <param name="property">Property to be processed.</param>
            <param name="required">Will return warnings if required and value could not be processed.</param>
        </member>
        <member name="M:MilitiaDataParsing.Parser.Generic``1(System.String,``0@,System.Boolean)">
            <summary>
            Parses a generic value. To be called within Parsing method.
            <para>Usage: Generic&lt;DataType&gt;("field_key", field);</para>
            </summary>
            <param name="key">Key in source data.</param>
            <param name="field">Field to be processed.</param>
            <param name="required">Will return warnings if required and value could not be processed.</param>
        </member>
        <member name="M:MilitiaDataParsing.Parser.Generic``1(System.String,System.Object,System.Boolean)">
            <summary>
            Parses a generic value. To be called within Parsing method.
            <para>Usage: Property = Generic&lt;DataType&gt;("property_key", Property);</para>
            </summary>
            <param name="key">Key in source data.</param>
            <param name="property">Field to be processed.</param>
            <param name="required">Will return warnings if required and value could not be processed.</param>
        </member>
        <member name="M:MilitiaDataParsing.Parser.Int(System.String,System.Int32@,System.Boolean)">
            <summary>
            Parses an int value. To be called within Parsing method.
            <para>Usage: Int("field_key", field);</para>
            </summary>
            <param name="key">Key in source data.</param>
            <param name="field">Field to be processed.</param>
            <param name="required">Will return warnings if required and value could not be processed.</param>
        </member>
        <member name="M:MilitiaDataParsing.Parser.Int(System.String,System.Int32,System.Boolean)">
            <summary>
            Parses an int value. To be called within Parsing method.
            <para>Usage: Property = Int("property_key", Property);</para>
            </summary>
            <param name="key">Key in source data.</param>
            <param name="property">Property to be processed.</param>
            <param name="required">Will return warnings if required and value could not be processed.</param>
        </member>
        <member name="M:MilitiaDataParsing.Parser.String(System.String,System.String@,System.Boolean)">
            <summary>
            Parses a string value. To be called within Parsing method.
            <para>Usage: String("field_key", field);</para>
            </summary>
            <param name="key">Key in source data.</param>
            <param name="field">Field to be processed.</param>
            <param name="required">Will return warnings if required and value could not be processed.</param>
        </member>
        <member name="M:MilitiaDataParsing.Parser.String(System.String,System.String,System.Boolean)">
            <summary>
            Parses a string value. To be called within Parsing method.
            <para>Usage: Property = String("property_key", Property);</para>
            </summary>
            <param name="key">Key in source data.</param>
            <param name="property">Property to be processed.</param>
            <param name="required">Will return warnings if required and value could not be processed.</param>
        </member>
        <member name="T:MilitiaDataParsing.OutputEventArgs">
            <summary>
            Defines information about a parsing warning or error.
            </summary>
        </member>
        <member name="P:MilitiaDataParsing.OutputEventArgs.Message">
            <summary>
            Message detailing the cause of warning or error.
            </summary>
        </member>
        <member name="P:MilitiaDataParsing.OutputEventArgs.Exception">
            <summary>
            The exception thrown causing the warning or error.
            </summary>
        </member>
        <member name="P:MilitiaDataParsing.ParserConfiguration.StringReference">
            <summary>
            Symbol to indicate a string value.
            </summary>
        </member>
        <member name="P:MilitiaDataParsing.ParserConfiguration.StringBlock">
            <summary>
            Symbol to surround string values.
            </summary>
        </member>
        <member name="P:MilitiaDataParsing.ParserConfiguration.ContainerHeader">
            <summary>
            Indicates the start of a new container.
            </summary>
        </member>
        <member name="P:MilitiaDataParsing.ParserConfiguration.ContainerFooter">
            <summary>
            Indicates the end of a container.
            </summary>
        </member>
        <member name="T:MilitiaDataParsing.ParserHandler">
            <summary>
            Represents a handler for a parser.
            </summary>
        </member>
        <member name="E:MilitiaDataParsing.ParserHandler.Output">
            <summary>
            Occurs when the handler or its parser ejects information on warnings or errors. A EventHandler can be provided through the constructor to register possible initializing errors.
            </summary>
        </member>
        <member name="M:MilitiaDataParsing.ParserHandler.#ctor(MilitiaDataParsing.Parser,System.EventHandler{MilitiaDataParsing.OutputEventArgs})">
            <summary>
            Initialize a parser handler using a specific parser and provided EventHandler for listening to Output.
            </summary>
            <param name="parser">Parser to be used.</param>
            <param name="onOutput">EventHandler to be registered to Output.</param>
        </member>
        <member name="M:MilitiaDataParsing.ParserHandler.#ctor(System.EventHandler{MilitiaDataParsing.OutputEventArgs})">
            <summary>
            Initialize a parser handler using the default parser with a provided EventHandler for listening to Output.
            </summary>
            <param name="onOutput">EventHandler to be registered to Output.</param>
        </member>
        <member name="M:MilitiaDataParsing.ParserHandler.#ctor">
            <summary>
            Initialize a parser handler using the default parser.
            </summary>
        </member>
        <member name="M:MilitiaDataParsing.ParserHandler.IndexType(System.Type)">
            <summary>
            If you're having problems importing embedded objects which derive from the variable type, try indexing them with this method first.
            </summary>
            <param name="type">Type to store.</param>
        </member>
        <member name="M:MilitiaDataParsing.ParserHandler.Import``1(System.String)">
            <summary>
            Creates and returns a new object from source data.
            </summary>
            <param name="data">Source data.</param>
        </member>
        <member name="M:MilitiaDataParsing.ParserHandler.Update(System.String,MilitiaDataParsing.IParsable)">
            <summary>
            Updates a provided object with source data.
            </summary>
            <param name="data">Source data.</param>
            <param name="obj">Existing object.</param>
        </member>
        <member name="M:MilitiaDataParsing.ParserHandler.Export(MilitiaDataParsing.IParsable)">
            <summary>
            Returns source data for the provided object.
            </summary>
            <param name="obj">Existing object.</param>
        </member>
    </members>
</doc>
